<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>