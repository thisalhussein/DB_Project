<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /7YDKY6zyJkFAAAAAElFTkSuQmCC
</value>
  </data>
</root>